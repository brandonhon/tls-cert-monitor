---
# Handlers for tls-cert-monitor role

- name: reload systemd
  systemd:
    daemon_reload: yes
  when: ansible_system == "Linux"

- name: restart tls-cert-monitor
  systemd:
    name: "{{ service_name }}"
    state: restarted
  when: ansible_system == "Linux"

# Native Windows service handlers (v1.2.0+)
- name: restart tls-cert-monitor-windows-native
  win_shell: |
    $exePath = "{{ install_dir_windows }}\\tls-cert-monitor.exe"

    # Get current service status
    $service = Get-Service -Name "{{ service_name }}" -ErrorAction SilentlyContinue

    if ($service) {
        Write-Host "Stopping service..."
        & $exePath --service-stop
        Start-Sleep -Seconds 2

        Write-Host "Starting service..."
        & $exePath --service-start
        Start-Sleep -Seconds 2

        # Verify service is running
        $service = Get-Service -Name "{{ service_name }}" -ErrorAction SilentlyContinue
        if ($service.Status -ne 'Running') {
            throw "Service failed to restart. Status: $($service.Status)"
        }

        Write-Host "Service restarted successfully"
    } else {
        Write-Warning "Service '{{ service_name }}' not found"
    }
  args:
    executable: powershell
  when: ansible_os_family == "Windows" and windows_service_method == "native"

# NSSM Windows service handlers (legacy/fallback)
- name: restart tls-cert-monitor-windows-nssm
  win_shell: |
    $nssmPath = "{{ install_dir_windows }}\\nssm-2.24\\win64\\nssm.exe"
    & $nssmPath restart "{{ service_name }}"
  args:
    executable: powershell
  when: ansible_os_family == "Windows" and windows_service_method == "nssm"