# Linux Build Container for TLS Certificate Monitor
FROM python:3.11-slim-bullseye

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    libc6-dev \
    libssl-dev \
    libffi-dev \
    zlib1g-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt requirements-dev.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements-dev.txt

# Copy source code
COPY . .

# Build script
RUN echo '#!/bin/bash' > /app/build.sh && \
    echo 'set -e' >> /app/build.sh && \
    echo '' >> /app/build.sh && \
    echo 'echo "Building Linux binary with Nuitka..."' >> /app/build.sh && \
    echo '' >> /app/build.sh && \
    echo '# Configure Nuitka flags for Linux' >> /app/build.sh && \
    echo 'NUITKA_FLAGS="--onefile --standalone --enable-plugin=pkg-resources --assume-yes-for-downloads"' >> /app/build.sh && \
    echo 'NUITKA_FLAGS="$NUITKA_FLAGS --disable-console --follow-imports"' >> /app/build.sh && \
    echo 'NUITKA_FLAGS="$NUITKA_FLAGS --include-package=tls_cert_monitor"' >> /app/build.sh && \
    echo 'NUITKA_FLAGS="$NUITKA_FLAGS --include-module=uvicorn"' >> /app/build.sh && \
    echo 'NUITKA_FLAGS="$NUITKA_FLAGS --include-module=cryptography"' >> /app/build.sh && \
    echo 'NUITKA_FLAGS="$NUITKA_FLAGS --include-module=prometheus_client"' >> /app/build.sh && \
    echo '' >> /app/build.sh && \
    echo '# Build the binary' >> /app/build.sh && \
    echo 'python -m nuitka $NUITKA_FLAGS \' >> /app/build.sh && \
    echo '    main.py \' >> /app/build.sh && \
    echo '    --output-dir=/app/dist \' >> /app/build.sh && \
    echo '    --output-filename=tls-cert-monitor-linux' >> /app/build.sh && \
    echo '' >> /app/build.sh && \
    echo 'echo "Build completed successfully!"' >> /app/build.sh && \
    echo 'ls -la /app/dist/' >> /app/build.sh && \
    chmod +x /app/build.sh

# Default command
CMD ["/app/build.sh"]